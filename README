*** Overview ***

PostChecker is a distributed monitoring tool for Postfix servers.  The main purpose of the tool is to connect to multiple Postfix servers, check their queue status, and generate a aggregate report based on those numbers.  While PostChecker can be used to monitor a single server, it really starts to make sense when three or more servers need to be monitored.

PostChecker is designed to be a interactive monitoring tool, rather than a trending or capacity planning tool.  However, you can use the "--parseable" option to postchecker_cli.php to generate parseable output you can then feed into another tool for trending purposes, if that's your bag.

Author - Matt Willman - willman.matt@threepaw.com

*** Design ***

PostChecker is split into two primary pieces.  The "client" side code sits on the Postfix servers you want to monitor.  When someone connects to the "client" port, the client side code returns the number of active items in the configured queue directories.

The "server" side consists of three different front ends.

Use:

postchecker_web.php
	-- if you need to check the queues, and get a real-time response
postchecker_cli.php
	-- if you're not really a fan of that whole web thing
	-- or if you want to get parseable output for another tool
postchecker_server.php
	-- to get a continually updating view of your queues

While the server side code can run on the same machine as the client side code, the machine running the server side code accepts the additional burden of processing the statistics returned by the client side code.

*** Install ***

See the included INSTALL document in the primary source tree.

*** Use ***

The INSTALL document details what to put where.  Once everything is installed, the front-ends should produce output in the following manner.

A.  postchecker_web.php should return a dynamic HTML page with the current status of the queues when you invoke it
B.  postchecker_cli.php should return a text output representation of the current status of the queues
C.  postchecker_server.php (when running as a daemon) should update the postchecker.html page (actually the graphs contained in the page) every $update seconds (60 by default)
